--- mangoofuse.c	2015-02-25 09:14:31.551060724 +0530
+++ newmangoofuse.c	2015-03-02 15:11:29.804770771 +0530
@@ -17,9 +17,11 @@
 #define FUSE_USE_VERSION 26
 #include <fuse/fuse.h>
 #include <fuse/fuse_lowlevel.h>
-
+#include<db.h>
 #include <mangooapp.h>
 
+#define DBENV_DIR "/tmp/TXNAPP"
+
 static struct mangoo_store *ms;
 
 struct mf_dir {
@@ -107,6 +109,7 @@ errout1:
 	return -error;
 }
 
+
 static int mf_chmod(const char *path, mode_t mode)
 {
   struct mangoo_handle *handle = NULL;
@@ -209,12 +212,52 @@ errout:
 	return -error;
 }
 
+void env_open(DB_ENV **dbenvp)
+{
+  DB_ENV *mydbenv;
+  int ret;
+  
+  /* Create the environment handle. */
+  if ((ret = db_env_create(&mydbenv, 0)) != 0) {
+    fprintf(stderr,
+	    "txnapp: db_env_create: %s\n", db_strerror(ret));
+    exit (1);
+  }
+
+
+  /* Set up error handling. */
+  mydbenv->set_errpfx(mydbenv, "txnapp");
+
+
+  /*
+   * Open a transactional environment:
+   *create if it doesn't exist
+   *free-threaded handle
+   *run recovery
+   *read/write owner only
+   */
+  if ((ret = mydbenv->open(mydbenv, DBENV_DIR,
+			      DB_CREATE | DB_INIT_LOG | DB_INIT_LOCK |
+			 DB_INIT_MPOOL | DB_INIT_TXN | DB_RECOVER | DB_THREAD,
+			 S_IRUSR | S_IWUSR)) != 0) {
+
+    printf("Error in OPENING ENVIRONMENT...!!! \n");    
+    (void)mydbenv->close(mydbenv, 0);
+    mydbenv->err(mydbenv, ret, "dbenv->open: %s", DBENV_DIR);
+    exit (1);
+  }
+
+  *dbenvp = mydbenv;
+}
+
 static int mf_read(const char *path, char *buf, size_t size, off_t offset,
 		      struct fuse_file_info *fi)
 {
 	struct mangoo_handle *handle = (struct mangoo_handle*)fi->fh;
 	int error;
-
+	DB_ENV *dbenv;
+	env_open(&dbenv);
+	printf("Environment Opened\n");
 	printf("mf_read:1 %s\n", path);
 	if (!fi->fh)
 		return -EINVAL;
@@ -229,6 +272,8 @@ static int mf_write(const char *path, co
 {
 	struct mangoo_handle *handle = (struct mangoo_handle*)fi->fh;
 	int error;
+	DB_ENV *dbenv;
+	env_open(&dbenv);	    
 
 	printf("mf_write:1 %s\n", path);
 	if (!fi->fh)
@@ -236,6 +281,7 @@ static int mf_write(const char *path, co
 	printf("mf_write:2 %lx\n", (uint64_t)handle);
 	if ((error = mstream_write(handle, buf, &size, offset)))
 		return -error;
+
 	return size;
 }
 
